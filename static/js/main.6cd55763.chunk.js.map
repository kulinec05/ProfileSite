{"version":3,"sources":["img/begin.jpg","img/mid.jpg","img/flor.jpg","img/books.svg","img/cafe.svg","img/hacker.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","isComplete","setIsComplete","pop","setPop","scrollYProgress","useViewportScroll","yRange","useTransform","pathLength","useSpring","stiffness","damping","useEffect","onChange","v","Navbar","bg","variant","fixed","Container","className","viewBox","motion","path","fill","strokeWidth","stroke","strokeDasharray","d","style","rotate","translateX","translateY","scaleX","initial","animate","Nav","div","whileHover","scale","whileTap","borderRadius","Link","href","left","Card","opacity","transition","duration","bgImage","mid","strength","overflow","position","height","ImgOverlay","color","Title","p","y","x","type","delay","h1","Text","h2","begin","src","hacker","cafe","books","flor","renderLayer","percentage","onClick","background","top","transform","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cd55763.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/begin.f74e2696.jpg\";","export default __webpack_public_path__ + \"static/media/mid.2e8cd70b.jpg\";","export default __webpack_public_path__ + \"static/media/flor.74643d33.jpg\";","export default __webpack_public_path__ + \"static/media/books.3be8226b.svg\";","export default __webpack_public_path__ + \"static/media/cafe.70f8e86d.svg\";","export default __webpack_public_path__ + \"static/media/hacker.db609236.svg\";","import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport begin from './img/begin.jpg'\nimport mid from './img/mid.jpg'\nimport flor from './img/flor.jpg'\nimport {Card, Container, Nav, Navbar} from \"react-bootstrap\";\nimport {Fade} from \"react-reveal\";\nimport {motion, useSpring, useTransform, useViewportScroll} from \"framer-motion\"\nimport {Parallax} from \"react-parallax\";\nimport books from './img/books.svg'\nimport cafe from './img/cafe.svg'\nimport hacker from './img/hacker.svg'\n\n\nconst App = () => {\n\n    const [isComplete, setIsComplete] = useState(false);\n    const [pop, setPop] = useState(false)\n    const {scrollYProgress} = useViewportScroll();\n    const yRange = useTransform(scrollYProgress, [0, 0.9], [0, 1]);\n    const pathLength = useSpring(yRange, {stiffness: 400, damping: 90});\n\n    useEffect(() => yRange.onChange(v => setIsComplete(v >= 1)), [yRange]);\n\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed='top'>\n                <Container className='justify-content-center'>\n                    <svg className=\"progress-icon\" viewBox=\"0 0 60 60\">\n                        <motion.path\n                            fill=\"none\"\n                            strokeWidth=\"5\"\n                            stroke=\"white\"\n                            strokeDasharray=\"0 1\"\n                            d=\"M 0, 20 a 20, 20 0 1,0 40,0 a 20, 20 0 1,0 -40,0\"\n                            style={{\n                                pathLength,\n                                rotate: 90,\n                                translateX: 5,\n                                translateY: 5,\n                                scaleX: -1 // Reverse direction of line animation\n                            }}\n                        />\n                        <motion.path\n                            fill=\"none\"\n                            strokeWidth=\"5\"\n                            stroke=\"white\"\n                            d=\"M14,26 L 22,33 L 35,16\"\n                            initial={false}\n                            strokeDasharray=\"0 1\"\n                            animate={{pathLength: isComplete ? 1 : 0}}\n                        />\n                    </svg>\n                    <Nav>\n                        <motion.div\n                            whileHover={{scale: 1.2}}\n                            whileTap={{\n                                scale: 0.9,\n                                borderRadius: \"100%\"\n                            }}><Nav.Link href=\"#home\">Home</Nav.Link>\n                        </motion.div>\n                        <motion.div\n                            whileHover={{scale: 1.2}}\n                            whileTap={{\n                                scale: 0.9,\n                                borderRadius: \"100%\"\n                            }}><Nav.Link href=\"#home\">Home</Nav.Link>\n                        </motion.div>\n                        <motion.div\n                            whileHover={{scale: 1.2}}\n                            whileTap={{\n                                scale: 0.9,\n                                borderRadius: \"100%\"\n                            }}><Nav.Link href=\"#home\">Home</Nav.Link>\n                        </motion.div>\n                    </Nav>\n                </Container>\n            </Navbar>\n\n            <Fade left>\n\n                <div>\n                    <Card className=\"card\">\n                        <motion.div initial={{opacity: 0.5}}\n                                    animate={{opacity: 1}}\n                                    transition={{duration: 5}}>\n                            <Parallax bgImage={mid} strength={200} style={{overflow: 'visible', position: 'relative'}}>\n                                <div style={{height: '100vh'}}>\n                                </div>\n                            </Parallax>\n                        </motion.div>\n\n                        <Card.ImgOverlay className='first-plan' style={{color: 'white'}}>\n                            <Card.Title className='text-center'>\n                                <motion.div>\n                                    <motion.p initial={{opacity: 1, y: -400}}\n                                              animate={{opacity: 0, y: 300, scale: 2, x: -100}}\n                                              transition={{type: \"spring\", duration: 7}}\n                                    >BE READY\n                                    </motion.p>\n                                    <motion.p\n                                        initial={{opacity: 1, y: -400}}\n                                        animate={{opacity: 0, y: 300, scale: 2, x: 100}}\n                                        transition={{type: \"spring\", delay: 2, duration: 7}}\n                                    >TO HAVE LITTLE BIT\n                                    </motion.p>\n                                    <motion.h1\n                                        initial={{opacity: 1, y: -400}}\n                                        animate={{opacity: 0, y: 300, scale: 2}}\n                                        transition={{type: \"spring\", delay: 4, duration: 9}}\n                                    >MAGIC\n                                    </motion.h1>\n                                </motion.div>\n                            </Card.Title>\n                            <Card.Text className='text-center'>\n                                <motion.h1\n                                    initial={{opacity: 0, scale: 4}}\n                                    animate={{opacity: 1, scale: 1}}\n                                    transition={{type: \"spring\", duration: 2, delay: 6}}>\n                                    PORTFOLIO\n                                </motion.h1>\n                                <motion.h2\n                                    initial={{opacity: 0, scale: 3}}\n                                    animate={{opacity: 1, scale: 1}}\n                                    transition={{type: \"spring\", duration: 2, delay: 7}}>\n                                    MAGOMEDOV SHAMIL ARSENOVICH\n                                </motion.h2>\n                            </Card.Text>\n                        </Card.ImgOverlay>\n                    </Card>\n                </div>\n                <div>\n                    <Card className=\"card \">\n                        <Parallax bgImage={begin} strength={200} style={{overflow: 'visible', position: 'relative'}}>\n                            <div style={{height: '100vh'}}>\n                            </div>\n                        </Parallax>\n\n                        <Card.ImgOverlay className='second-plan'>\n                            <Card.Title>My last works</Card.Title>\n                            <div className='surface'>\n\n                                <motion.div className='box'\n                                            whileHover={{rotate: 10, opacity: 0.5}}\n                                            whileTap={{rotate: -180, borderRadius: '100%'}}\n                                >\n                                    <img src={hacker}/>\n                                </motion.div>\n                                <motion.div className='box'\n                                            whileHover={{rotate: 10, opacity: 0.5}}\n                                            whileTap={{rotate: -180, borderRadius: '100%'}}>                                    <img src={cafe}/>\n                                </motion.div>\n\n\n                                <motion.div className='box'\n                                            whileHover={{rotate: 10, opacity: 0.5}}\n                                            whileTap={{rotate: -180, borderRadius: '100%'}}>                                    <img src={books}/>\n                                </motion.div>\n\n\n                            </div>\n                            <Card.Text>Last updated 3 mins ago</Card.Text>\n                        </Card.ImgOverlay>\n                    </Card>\n                </div>\n                <div>\n                    <Card className=\"card \">\n\n                        <Parallax bgImage={flor} strength={200} style={{overflow: 'visible', position: 'relative'}}\n                                  renderLayer={(percentage) => (\n                                      !pop ? <div>\n                                          <div\n                                              onClick={() => setPop(true)}\n                                              style={{\n                                                  position: \"absolute\",\n                                                  background: `rgba(255, 125, 0, ${percentage * 1})`,\n                                                  left: \"50%\",\n                                                  top: \"50%\",\n                                                  borderRadius: \"50%\",\n                                                  transform: \"translate(-50%,-50%)\",\n                                                  width: percentage * 500,\n                                                  height: percentage * 500,\n                                                  color: 'black'\n                                              }}\n                                          />\n                                      </div> : null\n                                  )}>\n                            <div style={{height: '100vh'}}>\n                            </div>\n                        </Parallax>\n\n\n                        <Card.ImgOverlay className='second-plan'>\n                            <Card.Title>Card title</Card.Title>\n                            <Card.Text>\n                                This is a wider card with supporting text below as a natural lead-in to\n                                additional content. This content is a little bit longer.\n                            </Card.Text>\n                            <Card.Text>Last updated 3 mins ago</Card.Text>\n                        </Card.ImgOverlay>\n                    </Card>\n                </div>\n            </Fade>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}